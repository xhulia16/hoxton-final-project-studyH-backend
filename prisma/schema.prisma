// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Class {
  id        Int        @id @default(autoincrement())
  name      String
  pupils    Pupil[]
  teachers  Teacher[]
  exercises Exercise[]
}

model Pupil {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  image    String
  score    Int
  class    Class    @relation(fields: [classId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  classId  Int
  scores   Scores[]
  answers   Answer[]
}

model Teacher {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  image     String
  class     Class      @relation(fields: [classId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  classId   Int
  exercises Exercise[]
}

model Exercise {
  id           Int      @id @default(autoincrement())
  exercise     String
  answer       String
  alternative1 String
  alternative2 String
  alternative3 String
  alternative4 String
  time         DateTime @default(now())
  teacher      Teacher  @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  teacherId    Int
  class        Class    @relation(fields: [classId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  classId      Int
  answers       Answer[]
}

model Scores {
  id      Int   @id @default(autoincrement())
  score   Int   @default(0)
  pupil   Pupil @relation(fields: [pupilId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pupilId Int
}

model Answer {
  id         Int      @id @default(autoincrement())
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pupil      Pupil    @relation(fields: [pupilId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  answer     String
  exerciseId Int
  pupilId    Int 
}

// model Message{
//     id      Int   @id @default(autoincrement())
// }
// if user answers we post the answer 